type Mutation {
  initiatePhoneChallenge(phoneNumber: String!): PhoneChallenge @function(name: "PlayerVerifyService-${env}")  @auth(rules: [{ allow: public }])
  tryPhoneChallenge(phoneNumber: String!, code: String!): Boolean! @function(name: "PlayerVerifyService-${env}") @auth(rules: [{ allow: public }])
  generateInvite: Invite @function(name: "InviteService-${env}")  @auth(rules: [{ allow: public }])
  initiateEmailChallenge(email: String!): EmailChallenge @function(name: "PlayerVerifyService-${env}") @auth(rules: [{ allow: public }])
  tryEmailChallenge(email: String!, code: String!): Boolean! @function(name: "PlayerVerifyService-${env}") @auth(rules: [{ allow: public }])
 
  
  openAppAndAccount(ssn: String!, athleteId: ID!): [AthleteAccount] @function(name: "UnitService-${env}") @auth(rules: [{allow: private, provider: userPools}])
  openAccount(athleteId: ID!, podName: String!): AthleteAccount @function(name: "UnitService-${env}") @auth(rules: [{allow: private, provider: userPools}])
  podSettings(athleteId: ID!, savings: Int!, investments: Int!, spending: Int!): Athlete @function(name: "UnitService-${env}") @auth(rules: [{allow: private, provider: userPools}])
  createPlaidLink(athleteId: ID!): PlaidToken @function(name: "PlaidService-${env}") @auth(rules: [{allow: private, provider: userPools}])
  updatePlaidLink(athleteId: ID!, accessToken: String!): PlaidToken @function(name: "PlaidService-${env}") @auth(rules: [{allow: private, provider: userPools}])
  
  createAthleteUnitToken(athleteId: ID!, verificationToken: String!, verificationCode: String!): UnitAccount @function(name: "UnitService-${env}") @auth(rules: [{allow: private, provider: userPools}])
  athleteUnitTokenVerification(athleteId: ID!): UnitAccount @function(name: "UnitService-${env}") @auth(rules: [{allow: private, provider: userPools}])

  createWyreAccount(athleteId: ID!): Athlete @function(name: "WyreService-${env}") @auth(rules: [{allow: private, provider: userPools}])

  debitWyreAccount(athleteId: ID!, plaidAccountId: String!, amount: Float!, description: String, idempotencyKey: String!): WyreAccount @function(name: "WyreService-${env}") @auth(rules: [{allow: private, provider: userPools}])
  creditWyreAccount(athleteId: ID!, plaidAccountId: String!, amount: Float!, description: String, idempotencyKey: String!): WyreAccount @function(name: "WyreService-${env}") @auth(rules: [{allow: private, provider: userPools}])
  
  createPlaidPayment(athleteId: ID!, plaidAccountId: String!, amount: Float!, description: String, idempotencyKey: String!, unitToken: String!): RecentTransaction @function(name: "UnitService-${env}") @auth(rules: [{allow: private, provider: userPools}])
  bookPayment(athleteId: ID!, unitAccountId: String!, amount: Float!, description: String, receiverUnitAccountId: String!, receiverAccountType: String, idempotencyKey: String!, unitToken: String!): RecentTransaction @function(name: "UnitService-${env}") @auth(rules: [{allow: private, provider: userPools}])
  debitAccount(athleteId: ID!, amount: Float!, description: String, receiverName: String!, receiverRoutingNumber: String!, receiverAccountNumber: String!, receiverAccountType: String, addenda: String, idempotencyKey: String!, unitToken: String!): RecentTransaction @function(name: "UnitService-${env}") @auth(rules: [{allow: private, provider: userPools}])
  creditAccount(athleteId: ID!, amount: Float!, description: String, receiverName: String!, receiverRoutingNumber: String!, receiverAccountNumber: String!, receiverAccountType: String, addenda: String, idempotencyKey: String!, unitToken: String!): RecentTransaction @function(name: "UnitService-${env}") @auth(rules: [{allow: private, provider: userPools}])
}
