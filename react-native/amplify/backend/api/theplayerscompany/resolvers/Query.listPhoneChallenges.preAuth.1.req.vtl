## [Start] Set query expression for key **
#if( $util.isNull($ctx.args.code) && !$util.isNull($ctx.args.sortDirection) )
  $util.error("When providing argument 'sortDirection' you must also provide argument 'code'.", "InvalidArgumentsError")
#end
#set( $modelQueryExpression = {} )
## [Start] Validate key arguments. **
#if( !$util.isNull($ctx.args.phoneNumber) && $util.isNull($ctx.args.code) )
  $util.error("When providing argument 'phoneNumber' you must also provide arguments code", "InvalidArgumentsError")
#end
## [End] Validate key arguments. **
#if( !$util.isNull($ctx.args.code) )
  #set( $modelQueryExpression.expression = "#code = :code" )
  #set( $modelQueryExpression.expressionNames = {
  "#code": "code"
} )
  #set( $modelQueryExpression.expressionValues = {
  ":code": {
      "S": "$ctx.args.code"
  }
} )
#end
## [Start] Applying Key Condition **
#if( !$util.isNull($ctx.args.phoneNumber) && !$util.isNull($ctx.args.phoneNumber.beginsWith) )
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND begins_with(#sortKey, :sortKey)" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "phoneNumber"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey", { "S": "$ctx.args.phoneNumber.beginsWith" }))
#end
#if( !$util.isNull($ctx.args.phoneNumber) && !$util.isNull($ctx.args.phoneNumber.between) )
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND #sortKey BETWEEN :sortKey0 AND :sortKey1" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "phoneNumber"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey0", { "S": "$ctx.args.phoneNumber.between[0]" }))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey1", { "S": "$ctx.args.phoneNumber.between[1]" }))
#end
#if( !$util.isNull($ctx.args.phoneNumber) && !$util.isNull($ctx.args.phoneNumber.eq) )
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND #sortKey = :sortKey" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "phoneNumber"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey", { "S": "$ctx.args.phoneNumber.eq" }))
#end
#if( !$util.isNull($ctx.args.phoneNumber) && !$util.isNull($ctx.args.phoneNumber.lt) )
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND #sortKey < :sortKey" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "phoneNumber"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey", { "S": "$ctx.args.phoneNumber.lt" }))
#end
#if( !$util.isNull($ctx.args.phoneNumber) && !$util.isNull($ctx.args.phoneNumber.le) )
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND #sortKey <= :sortKey" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "phoneNumber"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey", { "S": "$ctx.args.phoneNumber.le" }))
#end
#if( !$util.isNull($ctx.args.phoneNumber) && !$util.isNull($ctx.args.phoneNumber.gt) )
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND #sortKey > :sortKey" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "phoneNumber"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey", { "S": "$ctx.args.phoneNumber.gt" }))
#end
#if( !$util.isNull($ctx.args.phoneNumber) && !$util.isNull($ctx.args.phoneNumber.ge) )
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND #sortKey >= :sortKey" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "phoneNumber"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey", { "S": "$ctx.args.phoneNumber.ge" }))
#end
## [End] Applying Key Condition **
## [End] Set query expression for key **
$util.qr($ctx.stash.put("modelQueryExpression", $modelQueryExpression))
{}